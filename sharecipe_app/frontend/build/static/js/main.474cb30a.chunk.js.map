{"version":3,"sources":["components/ResetPassword.js","App.js","index.js"],"names":["ResetPasswordForm","formData","setFormData","useState","newPassword","confirmPassword","errors","setErrors","showToast","setShowToast","toastMessage","setToastMessage","handleChange","e","name","value","target","[object Object]","newErrors","validate","length","React","createElement","className","Card","style","width","maxWidth","Form","onSubmit","preventDefault","Object","keys","console","log","Group","controlId","Label","Control","type","onChange","isInvalid","Feedback","Button","variant","ToastContainer","position","Toast","onClose","show","delay","autohide","Header","Body","App","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iQA0GeA,MAvGWA,KACxB,MAAOC,EAAUC,GAAeC,mBAAS,CACvCC,YAAa,GACbC,gBAAiB,MAGZC,EAAQC,GAAaJ,mBAAS,KAC9BK,EAAWC,GAAgBN,oBAAS,IACpCO,EAAcC,GAAmBR,mBAAS,IAE3CS,EAAgBC,IACpB,MAAMC,KAAEA,EAAIC,MAAEA,GAAUF,EAAEG,OAE1Bd,EAAY,IAAKD,EAAUgB,CAACH,GAAOC,IAGnC,MAAMG,EAAYC,EAAS,IAAKlB,EAAUgB,CAACH,GAAOC,IAClDR,EAAUW,IAGNC,EAAYlB,IAChB,MAAMiB,EAAY,GAYlB,OAVKjB,EAASG,YAEHH,EAASG,YAAYgB,OAAS,IACvCF,EAAUd,YAAc,0CAFxBc,EAAUd,YAAc,2BAKtBH,EAASI,kBAAoBJ,EAASG,cACxCc,EAAUb,gBAAkB,0BAGvBa,GAgBT,OACEG,IAAAC,cAAA,OAAKC,UAAU,+DACbF,IAAAC,cAACE,IAAI,CAACD,UAAU,MAAME,MAAO,CAAEC,MAAO,OAAQC,SAAU,UACtDN,IAAAC,cAAA,MAAIC,UAAU,oBAAmB,kBACjCF,IAAAC,cAACM,IAAI,CAACC,SAjBUhB,IACpBA,EAAEiB,iBACF,MAAMZ,EAAYC,EAASlB,GAC3BM,EAAUW,GAE4B,IAAlCa,OAAOC,KAAKd,GAAWE,SAEzBa,QAAQC,IAAI,+BAAgCjC,GAC5CQ,GAAa,GACbE,EAAgB,mCASZU,IAAAC,cAACM,IAAKO,MAAK,CAACC,UAAU,eACpBf,IAAAC,cAACM,IAAKS,MAAK,KAAC,gBACZhB,IAAAC,cAACM,IAAKU,QAAO,CACXC,KAAK,WACLzB,KAAK,cACLC,MAAOd,EAASG,YAChBoC,SAAU5B,EACV6B,YAAanC,EAAOF,cAEtBiB,IAAAC,cAACM,IAAKU,QAAQI,SAAQ,CAACH,KAAK,WACzBjC,EAAOF,cAGZiB,IAAAC,cAACM,IAAKO,MAAK,CAACC,UAAU,kBAAkBb,UAAU,QAChDF,IAAAC,cAACM,IAAKS,MAAK,KAAC,oBACZhB,IAAAC,cAACM,IAAKU,QAAO,CACXC,KAAK,WACLzB,KAAK,kBACLC,MAAOd,EAASI,gBAChBmC,SAAU5B,EACV6B,YAAanC,EAAOD,kBAEtBgB,IAAAC,cAACM,IAAKU,QAAQI,SAAQ,CAACH,KAAK,WACzBjC,EAAOD,kBAGZgB,IAAAC,cAACqB,IAAM,CAACpB,UAAU,aAAaqB,QAAQ,UAAUL,KAAK,UAAS,oBAMnElB,IAAAC,cAACuB,IAAc,CAACC,SAAS,UAAUvB,UAAU,OAC3CF,IAAAC,cAACyB,IAAK,CACJC,QAASA,IAAMvC,GAAa,GAC5BwC,KAAMzC,EACN0C,MAAO,IACPC,UAAQ,GAER9B,IAAAC,cAACyB,IAAMK,OAAM,KACX/B,IAAAC,cAAA,UAAQC,UAAU,WAAU,YAE9BF,IAAAC,cAACyB,IAAMM,KAAI,KAAE3C,OCjFR4C,MAXf,WAEE,OACEjC,IAAAC,cAAA,OAAKC,UAAU,OAETF,IAAAC,cAACtB,EAAiB,QCPfuD,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAACgC,EAAG","file":"static/js/main.474cb30a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Button, Toast, ToastContainer, Card } from \"react-bootstrap\";\n\nconst ResetPasswordForm = () => {\n  const [formData, setFormData] = useState({\n    newPassword: '',\n    confirmPassword: '',\n  });\n\n  const [errors, setErrors] = useState({});\n  const [showToast, setShowToast] = useState(false);\n  const [toastMessage, setToastMessage] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setFormData({ ...formData, [name]: value });\n\n    // Update errors in real-time\n    const newErrors = validate({ ...formData, [name]: value });\n    setErrors(newErrors);\n  };\n\n  const validate = (formData) => {\n    const newErrors = {};\n\n    if (!formData.newPassword) {\n      newErrors.newPassword = 'New password is required';\n    } else if (formData.newPassword.length < 8) {\n      newErrors.newPassword = 'Password must be at least 8 characters';\n    }\n\n    if (formData.confirmPassword !== formData.newPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    return newErrors;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newErrors = validate(formData);\n    setErrors(newErrors);\n\n    if (Object.keys(newErrors).length === 0) {\n      // Handle form submission (e.g., send data to server)\n      console.log('Form submitted successfully:', formData);\n      setShowToast(true);\n      setToastMessage('Password reset successfully!');\n    }\n  };\n\n  return (\n    <div className=\"d-flex justify-content-center align-items-center min-vh-100\">\n      <Card className=\"p-4\" style={{ width: '100%', maxWidth: '400px' }}>\n        <h2 className=\"text-center mb-4\">Reset Password</h2>\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId=\"newPassword\">\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"newPassword\"\n              value={formData.newPassword}\n              onChange={handleChange}\n              isInvalid={!!errors.newPassword}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.newPassword}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group controlId=\"confirmPassword\" className=\"mt-3\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              isInvalid={!!errors.confirmPassword}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.confirmPassword}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button className=\"mt-4 w-100\" variant=\"primary\" type=\"submit\">\n            Reset Password\n          </Button>\n        </Form>\n      </Card>\n\n      <ToastContainer position=\"top-end\" className=\"p-3\">\n        <Toast\n          onClose={() => setShowToast(false)}\n          show={showToast}\n          delay={3000}\n          autohide\n        >\n          <Toast.Header>\n            <strong className=\"me-auto\">Success</strong>\n          </Toast.Header>\n          <Toast.Body>{toastMessage}</Toast.Body>\n        </Toast>\n      </ToastContainer>\n    </div>\n  );\n};\n\nexport default ResetPasswordForm;\n","import './App.css';\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport RegisterForm from './components/Register';\nimport ForgotPasswordForm from './components/ForgotPassword';\nimport ResetPasswordForm from './components/ResetPassword';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n          \n          <ResetPasswordForm/>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n"],"sourceRoot":""}