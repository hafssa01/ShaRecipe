{"map":"{\"version\":3,\"sources\":[\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/components/ForgotPassword.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/components/Register.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/components/ResetPassword.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/components/Login.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/components/Navscroll.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/components/Footer.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/pages/Homepage.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/App.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/client/src/index.js\"],\"names\":[\"ForgotPasswordForm\",\"formData\",\"setFormData\",\"useState\",\"email\",\"errors\",\"setErrors\",\"showToast\",\"setShowToast\",\"toastMessage\",\"setToastMessage\",\"navigate\",\"useNavigate\",\"validate\",\"newErrors\",\"test\",\"React\",\"createElement\",\"className\",\"Card\",\"style\",\"width\",\"maxWidth\",\"Form\",\"onSubmit\",\"e\",\"preventDefault\",\"Object\",\"keys\",\"length\",\"console\",\"log\",\"Group\",\"controlId\",\"Label\",\"Control\",\"type\",\"name\",\"value\",\"onChange\",\"target\",\"[object Object]\",\"isInvalid\",\"Feedback\",\"Button\",\"variant\",\"ToastContainer\",\"position\",\"Toast\",\"onClose\",\"show\",\"delay\",\"autohide\",\"Header\",\"Body\",\"RegisterForm\",\"firstName\",\"lastName\",\"password\",\"confirmPassword\",\"sex\",\"country\",\"handleChange\",\"alphabeticValue\",\"replace\",\"trim\",\"Row\",\"Col\",\"sm\",\"Select\",\"href\",\"GoogleLogin\",\"onSuccess\",\"response\",\"credential\",\"fetch\",\"method\",\"headers\",\"Content-Type\",\"body\",\"JSON\",\"stringify\",\"token\",\"then\",\"json\",\"data\",\"catch\",\"error\",\"onError\",\"render\",\"_ref\",\"onClick\",\"display\",\"alignItems\",\"justifyContent\",\"FaGoogle\",\"ResetPasswordForm\",\"newPassword\",\"LoginForm\",\"user\",\"setUser\",\"isLoggedIn\",\"setIsLoggedIn\",\"useEffect\",\"storedUser\",\"localStorage\",\"getItem\",\"parse\",\"handleLogout\",\"removeItem\",\"GoogleOAuthProvider\",\"clientId\",\"details\",\"jwtDecode\",\"setItem\",\"NavBar\",\"Navbar\",\"expand\",\"Container\",\"fluid\",\"Brand\",\"Toggle\",\"aria-controls\",\"Collapse\",\"id\",\"Nav\",\"navbarScroll\",\"Link\",\"to\",\"borderRadius\",\"marginRight\",\"Footer\",\"backgroundColor\",\"color\",\"textAlign\",\"padding\",\"marginTop\",\"Date\",\"getFullYear\",\"Home\",\"App\",\"BrowserRouter\",\"Routes\",\"Route\",\"path\",\"element\",\"index\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState } from \\\"react\\\";\\nimport { Form, Button, Toast, ToastContainer, Card } from \\\"react-bootstrap\\\";\\nimport { useNavigate } from 'react-router-dom';\\n\\nconst ForgotPasswordForm = () => {\\n  const [formData, setFormData] = useState({\\n    email: '',\\n  });\\n\\n  const [errors, setErrors] = useState({});\\n  const [showToast, setShowToast] = useState(false);\\n  const [toastMessage, setToastMessage] = useState('');\\n  \\n  const navigate = useNavigate(); // Initialize useNavigate\\n\\n  const handleChange = (e) => {\\n    const { name, value } = e.target;\\n\\n    setFormData({ ...formData, [name]: value });\\n\\n    // Update errors in real-time\\n    const newErrors = validate({ ...formData, [name]: value });\\n    setErrors(newErrors);\\n  };\\n\\n  const validate = (formData) => {\\n    const newErrors = {};\\n    \\n    const emailRegex = /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/;\\n    if (!formData.email || !emailRegex.test(formData.email)) {\\n      newErrors.email = 'Invalid email address';\\n    }\\n\\n    return newErrors;\\n  };\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    const newErrors = validate(formData);\\n    setErrors(newErrors);\\n\\n    if (Object.keys(newErrors).length === 0) {\\n      // Handle form submission (e.g., send data to server)\\n      console.log('Form submitted successfully:', formData);\\n      setShowToast(true);\\n      setToastMessage('Password reset email sent!');\\n\\n      // Navigate to the reset password page\\n      navigate('/reset-password');\\n    }\\n  };\\n\\n  return (\\n    <div className=\\\"d-flex justify-content-center align-items-center min-vh-100\\\">\\n      <Card className=\\\"p-4\\\" style={{ width: '100%', maxWidth: '400px' }}>\\n        <h2 className=\\\"text-center mb-4\\\">Forgot Password</h2>\\n        <Form onSubmit={handleSubmit}>\\n          <Form.Group controlId=\\\"email\\\">\\n            <Form.Label>Email</Form.Label>\\n            <Form.Control\\n              type=\\\"email\\\"\\n              name=\\\"email\\\"\\n              value={formData.email}\\n              onChange={handleChange}\\n              isInvalid={!!errors.email}\\n            />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              {errors.email}\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n          <Button className=\\\"mt-4 w-100\\\" variant=\\\"primary\\\" type=\\\"submit\\\">\\n            Forgot Password\\n          </Button>\\n        </Form>\\n      </Card>\\n\\n      <ToastContainer position=\\\"top-end\\\" className=\\\"p-3\\\">\\n        <Toast\\n          onClose={() => setShowToast(false)}\\n          show={showToast}\\n          delay={3000}\\n          autohide\\n        >\\n          <Toast.Header>\\n            <strong className=\\\"me-auto\\\">Success</strong>\\n          </Toast.Header>\\n          <Toast.Body>{toastMessage}</Toast.Body>\\n        </Toast>\\n      </ToastContainer>\\n    </div>\\n  );\\n};\\n\\nexport default ForgotPasswordForm;\\n\",\"import React, { useState } from \\\"react\\\";\\nimport { Form, Button, Col, Row, Toast, ToastContainer, Card } from \\\"react-bootstrap\\\";\\nimport { FaGoogle } from 'react-icons/fa';\\nimport { GoogleLogin } from '@react-oauth/google';\\n\\nconst RegisterForm = () => {\\n  const [formData, setFormData] = useState({\\n    firstName: '',\\n    lastName: '',\\n    email: '',\\n    password: '',\\n    confirmPassword: '',\\n    sex: '',\\n    country: '',\\n  });\\n\\n  const [errors, setErrors] = useState({});\\n  const [showToast, setShowToast] = useState(false);\\n  const [toastMessage, setToastMessage] = useState('');\\n\\n  const handleChange = (e) => {\\n    const { name, value } = e.target;\\n\\n    // Prevent non-alphabetic characters for first name, last name, and country\\n    if (name === 'firstName' || name === 'lastName' || name === 'country') {\\n      const alphabeticValue = value.replace(/[^a-zA-Z\\\\s]+/g, '');\\n      setFormData({ ...formData, [name]: alphabeticValue });\\n    } else {\\n      setFormData({ ...formData, [name]: value });\\n    }\\n\\n    // Update errors in real-time\\n    const newErrors = validate({ ...formData, [name]: value });\\n    setErrors(newErrors);\\n  };\\n\\n  const validate = (formData) => {\\n    const newErrors = {};\\n\\n    // Check for required fields and validate format\\n    if (!formData.firstName.trim()) {\\n      newErrors.firstName = 'First name is required';\\n    }\\n    if (!formData.lastName.trim()) {\\n      newErrors.lastName = 'Last name is required';\\n    }\\n\\n    const emailRegex = /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/;\\n    if (!formData.email || !emailRegex.test(formData.email)) {\\n      newErrors.email = 'Invalid email address';\\n    }\\n\\n    // Password and confirm password validation\\n    if (!formData.password || formData.password.length < 8) {\\n      newErrors.password = 'Password must be at least 8 characters long';\\n    }\\n    if (formData.password !== formData.confirmPassword) {\\n      newErrors.confirmPassword = 'Passwords do not match';\\n    }\\n\\n    if (!formData.sex) {\\n      newErrors.sex = 'Please select your sex';\\n    }\\n\\n    if (!formData.country.trim()) {\\n      newErrors.country = 'Please select your country';\\n    }\\n\\n    return newErrors;\\n  };\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    const newErrors = validate(formData);\\n    setErrors(newErrors);\\n\\n    if (Object.keys(newErrors).length === 0) {\\n      // Handle form submission (e.g., send data to server)\\n      console.log('Form submitted successfully:', formData);\\n      setShowToast(true);\\n      setToastMessage('Registration successful!');\\n    }\\n  };\\n\\n  const handleGoogleSuccess = (response) => {\\n    const { credential } = response;\\n    console.log('Google token:', credential);\\n\\n    fetch('/api/auth/google', {\\n      method: 'POST',\\n      headers: {\\n        'Content-Type': 'application/json',\\n      },\\n      body: JSON.stringify({ token: credential }),\\n    })\\n      .then(response => response.json())\\n      .then(data => {\\n        console.log('Server response:', data);\\n        // Handle successful response\\n        // e.g., redirect to dashboard or show a success message\\n        setShowToast(true);\\n        setToastMessage('Google sign-in successful!');\\n      })\\n      .catch(error => {\\n        console.error('Error:', error);\\n        // Handle error\\n        setShowToast(true);\\n        setToastMessage('Google sign-in failed!');\\n      });\\n  };\\n\\n  return (\\n    <div className=\\\"d-flex justify-content-center align-items-center min-vh-100\\\">\\n      <Card className=\\\"p-4\\\" style={{ width: '100%', maxWidth: '600px' }}>\\n        <h2 className=\\\"text-center mb-4\\\">Join us!</h2>\\n        <Form onSubmit={handleSubmit}>\\n          <Row>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"firstName\\\">\\n                <Form.Label>First Name</Form.Label>\\n                <Form.Control\\n                  type=\\\"text\\\"\\n                  name=\\\"firstName\\\"\\n                  value={formData.firstName}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.firstName}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.firstName}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"lastName\\\">\\n                <Form.Label>Last Name</Form.Label>\\n                <Form.Control\\n                  type=\\\"text\\\"\\n                  name=\\\"lastName\\\"\\n                  value={formData.lastName}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.lastName}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.lastName}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n          </Row>\\n\\n          <Form.Group controlId=\\\"email\\\" className=\\\"mt-3\\\">\\n            <Form.Label>Email</Form.Label>\\n            <Form.Control\\n              type=\\\"email\\\"\\n              name=\\\"email\\\"\\n              value={formData.email}\\n              onChange={handleChange}\\n              isInvalid={!!errors.email}\\n            />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              {errors.email}\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n\\n          <Row className=\\\"mt-3\\\">\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"password\\\">\\n                <Form.Label>Password</Form.Label>\\n                <Form.Control\\n                  type=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  value={formData.password}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.password}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.password}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"confirmPassword\\\">\\n                <Form.Label>Confirm Password</Form.Label>\\n                <Form.Control\\n                  type=\\\"password\\\"\\n                  name=\\\"confirmPassword\\\"\\n                  value={formData.confirmPassword}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.confirmPassword}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.confirmPassword}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n          </Row>\\n\\n          <Row className=\\\"mt-3\\\">\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"sex\\\">\\n                <Form.Label>Sex</Form.Label>\\n                <Form.Select\\n                  name=\\\"sex\\\"\\n                  value={formData.sex}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.sex}\\n                >\\n                  <option value=\\\"\\\">Select</option>\\n                  <option value=\\\"male\\\">Male</option>\\n                  <option value=\\\"female\\\">Female</option>\\n                  <option value=\\\"other\\\">Other</option>\\n                </Form.Select>\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.sex}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"country\\\">\\n                <Form.Label>Country</Form.Label>\\n                <Form.Control\\n                  type=\\\"text\\\"\\n                  name=\\\"country\\\"\\n                  value={formData.country}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.country}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.country}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n          </Row>\\n\\n          <Button className=\\\"mt-4 w-100\\\" variant=\\\"primary\\\" type=\\\"submit\\\">\\n            Register\\n          </Button>\\n\\n          <p className=\\\"text-center mt-3\\\">\\n            Already have an account? <a href=\\\"/login\\\" className=\\\"text-primary\\\">Login</a>\\n          </p>\\n\\n          <hr />\\n          <GoogleLogin\\n            onSuccess={handleGoogleSuccess}\\n            onError={(error) => {\\n              console.error('Google login error:', error);\\n              setShowToast(true);\\n              setToastMessage('Google sign-in failed!');\\n            }}\\n            render={({ onClick }) => (\\n              <Button className=\\\"w-100 mt-2 btn-light border\\\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }} onClick={onClick}>\\n                <FaGoogle className=\\\"me-2\\\" /> Sign up with Google\\n              </Button>\\n            )}\\n          />\\n        </Form>\\n      </Card>\\n\\n      <ToastContainer position=\\\"top-end\\\" className=\\\"p-3\\\">\\n        <Toast\\n          onClose={() => setShowToast(false)}\\n          show={showToast}\\n          delay={3000}\\n          autohide>\\n          <Toast.Header>\\n            <strong className=\\\"me-auto\\\">Success</strong>\\n          </Toast.Header>\\n          <Toast.Body>{toastMessage}</Toast.Body>\\n        </Toast>\\n      </ToastContainer>\\n    </div>\\n  );\\n};\\n\\nexport default RegisterForm;\\n\",\"import React, { useState } from \\\"react\\\";\\nimport { Form, Button, Toast, ToastContainer, Card } from \\\"react-bootstrap\\\";\\nimport { useNavigate } from 'react-router-dom';\\n\\nconst ResetPasswordForm = () => {\\n  const [formData, setFormData] = useState({\\n    newPassword: '',\\n    confirmPassword: '',\\n  });\\n\\n  const [errors, setErrors] = useState({});\\n  const [showToast, setShowToast] = useState(false);\\n  const [toastMessage, setToastMessage] = useState('');\\n\\n  const navigate = useNavigate();\\n\\n  const handleChange = (e) => {\\n    const { name, value } = e.target;\\n\\n    setFormData({ ...formData, [name]: value });\\n\\n    // Update errors in real-time\\n    const newErrors = validate({ ...formData, [name]: value });\\n    setErrors(newErrors);\\n  };\\n\\n  const validate = (formData) => {\\n    const newErrors = {};\\n\\n    if (!formData.newPassword) {\\n      newErrors.newPassword = 'New password is required';\\n    } else if (formData.newPassword.length < 8) {\\n      newErrors.newPassword = 'Password must be at least 8 characters';\\n    }\\n\\n    if (formData.confirmPassword !== formData.newPassword) {\\n      newErrors.confirmPassword = 'Passwords do not match';\\n    }\\n\\n    return newErrors;\\n  };\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    const newErrors = validate(formData);\\n    setErrors(newErrors);\\n\\n    if (Object.keys(newErrors).length === 0) {\\n      // Handle form submission (e.g., send data to server)\\n      console.log('Form submitted successfully:', formData);\\n      setShowToast(true);\\n      setToastMessage('Password reset successfully!');\\n\\n      navigate('/login');\\n    }\\n  };\\n\\n  return (\\n    <div className=\\\"d-flex justify-content-center align-items-center min-vh-100\\\">\\n      <Card className=\\\"p-4\\\" style={{ width: '100%', maxWidth: '400px' }}>\\n        <h2 className=\\\"text-center mb-4\\\">Reset Password</h2>\\n        <Form onSubmit={handleSubmit}>\\n          <Form.Group controlId=\\\"newPassword\\\">\\n            <Form.Label>New Password</Form.Label>\\n            <Form.Control\\n              type=\\\"password\\\"\\n              name=\\\"newPassword\\\"\\n              value={formData.newPassword}\\n              onChange={handleChange}\\n              isInvalid={!!errors.newPassword}\\n            />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              {errors.newPassword}\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n          <Form.Group controlId=\\\"confirmPassword\\\" className=\\\"mt-3\\\">\\n            <Form.Label>Confirm Password</Form.Label>\\n            <Form.Control\\n              type=\\\"password\\\"\\n              name=\\\"confirmPassword\\\"\\n              value={formData.confirmPassword}\\n              onChange={handleChange}\\n              isInvalid={!!errors.confirmPassword}\\n            />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              {errors.confirmPassword}\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n          <Button className=\\\"mt-4 w-100\\\" variant=\\\"primary\\\" type=\\\"submit\\\">\\n            Reset Password\\n          </Button>\\n        </Form>\\n      </Card>\\n\\n      <ToastContainer position=\\\"top-end\\\" className=\\\"p-3\\\">\\n        <Toast\\n          onClose={() => setShowToast(false)}\\n          show={showToast}\\n          delay={3000}\\n          autohide\\n        >\\n          <Toast.Header>\\n            <strong className=\\\"me-auto\\\">Success</strong>\\n          </Toast.Header>\\n          <Toast.Body>{toastMessage}</Toast.Body>\\n        </Toast>\\n      </ToastContainer>\\n    </div>\\n  );\\n};\\n\\nexport default ResetPasswordForm;\\n\",\"import React, { useState, useEffect } from 'react';\\nimport { GoogleOAuthProvider, GoogleLogin } from '@react-oauth/google';\\nimport { Card, Button, Toast, ToastContainer } from 'react-bootstrap';\\nimport { FaGoogle } from 'react-icons/fa';\\n\\nconst LoginForm = () => {\\n  const [user, setUser] = useState(null);\\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\\n  const [showToast, setShowToast] = useState(false);\\n  const [toastMessage, setToastMessage] = useState('');\\n\\n  useEffect(() => {\\n    const storedUser = localStorage.getItem('user');\\n    if (storedUser !== null) {\\n      setUser(JSON.parse(storedUser));\\n      setIsLoggedIn(true);\\n    }\\n  }, []);\\n\\n  const handleLoginSuccess = (response) => {\\n    if (response && response.credential) {\\n      const details = jwtDecode(response.credential);\\n      setUser(details);\\n      setIsLoggedIn(true);\\n      localStorage.setItem('user', JSON.stringify(details));\\n    } else {\\n      console.error('Invalid credential response');\\n      setShowToast(true);\\n      setToastMessage('Login failed!');\\n    }\\n  };\\n\\n  const handleLogout = () => {\\n    setUser(null);\\n    setIsLoggedIn(false);\\n    localStorage.removeItem('user');\\n  };\\n\\n  return (\\n    <div className=\\\"d-flex justify-content-center align-items-center min-vh-100\\\">\\n      <Card className=\\\"p-4\\\" style={{ width: '100%', maxWidth: '600px' }}>\\n        {isLoggedIn && user ? (\\n          <div>\\n            <h2 className=\\\"text-center mb-4\\\">Welcome, {user.name}!</h2>\\n            <Button className=\\\"w-100\\\" variant=\\\"primary\\\" onClick={handleLogout}>\\n              Logout\\n            </Button>\\n          </div>\\n        ) : (\\n          <div>\\n            <h2 className=\\\"text-center mb-4\\\">Login</h2>\\n            <GoogleOAuthProvider clientId=\\\"85792757464-4cer7qi0js1n067bhd9ca0ovcdcan1qg.apps.googleusercontent.com\\\">\\n              <GoogleLogin\\n                onSuccess={handleLoginSuccess}\\n                onError={() => {\\n                  console.log('Login Failed');\\n                  setShowToast(true);\\n                  setToastMessage('Google sign-in failed!');\\n                }}\\n                render={({ onClick }) => (\\n                  <Button\\n                    className=\\\"w-100 mt-2 btn-light border\\\"\\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\\n                    onClick={onClick}\\n                  >\\n                    <FaGoogle className=\\\"me-2\\\" /> Sign in with Google\\n                  </Button>\\n                )}\\n              />\\n            </GoogleOAuthProvider>\\n          </div>\\n        )}\\n      </Card>\\n\\n      <ToastContainer position=\\\"top-end\\\" className=\\\"p-3\\\">\\n        <Toast\\n          onClose={() => setShowToast(false)}\\n          show={showToast}\\n          delay={3000}\\n          autohide\\n        >\\n          <Toast.Header>\\n            <strong className=\\\"me-auto\\\">Notification</strong>\\n          </Toast.Header>\\n          <Toast.Body>{toastMessage}</Toast.Body>\\n        </Toast>\\n      </ToastContainer>\\n    </div>\\n  );\\n};\\n\\nexport default LoginForm;\\n\",\"import Button from 'react-bootstrap/Button';\\nimport Container from 'react-bootstrap/Container';\\nimport Nav from 'react-bootstrap/Nav';\\nimport Navbar from 'react-bootstrap/Navbar';\\nimport React from 'react';\\nimport { Link } from 'react-router-dom';\\n\\nfunction NavBar() {\\n  return (\\n    <Navbar expand=\\\"lg\\\" className=\\\"bg-body-tertiary\\\">\\n      <Container fluid>\\n        <Navbar.Brand href=\\\"#\\\">ShaRecipe</Navbar.Brand>\\n        <Navbar.Toggle aria-controls=\\\"navbarScroll\\\" />\\n        <Navbar.Collapse id=\\\"navbarScroll\\\">\\n          <Nav className=\\\"mx-auto my-2 my-lg-0\\\" navbarScroll>\\n            <Nav.Link href=\\\"#home\\\">Home</Nav.Link>\\n            <Nav.Link href=\\\"#recipes\\\">Recipes</Nav.Link>\\n          </Nav>\\n          <div className=\\\"d-flex\\\">\\n            <Link to=\\\"/login\\\">\\n              <Button \\n                variant=\\\"outline-dark\\\" \\n                style={{ borderRadius: '12px', marginRight: '8px' }}>\\n                Sign In\\n              </Button>\\n            </Link>\\n            \\n            <Link to=\\\"/register\\\">\\n              <Button \\n                variant=\\\"dark\\\" \\n                style={{ borderRadius: '12px' }}>\\n                Sign Up\\n              </Button>\\n            </Link>\\n\\n\\n          </div>\\n        </Navbar.Collapse>\\n      </Container>\\n    </Navbar>\\n  );\\n}\\n\\nexport default NavBar;\\n\",\"import React from 'react';\\nimport Container from 'react-bootstrap/Container';\\n\\nfunction Footer() {\\n  return (\\n    <footer style={{ \\n      backgroundColor: '#f8f9fa',\\n      color: '#212529', \\n      textAlign: 'center',\\n      padding: '1rem',\\n      marginTop: 'auto'\\n    }}>\\n      <Container>\\n        <p className=\\\"mb-0\\\">\\n          &copy; {new Date().getFullYear()} ShaRecipe. All rights reserved.\\n        </p>\\n      </Container>\\n    </footer>\\n  );\\n}\\n\\nexport default Footer;\\n\",\"import React from 'react';\\nimport NavBar from '../components/Navscroll';\\nimport Footer from '../components/Footer';\\n\\nfunction Home() {\\n  return (\\n    <div>\\n      <NavBar />\\n      <p>Hello visitor</p>\\n      <Footer/>\\n      \\n \\n    </div>\\n  );\\n}\\n\\nexport default Home;\\n\",\"import './App.css';\\nimport React from 'react';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\nimport ForgotPasswordForm from './components/ForgotPassword';\\nimport RegisterForm from './components/Register';\\nimport ResetPasswordForm from './components/ResetPassword';\\nimport LoginForm from './components/Login';\\nimport Home from './pages/Homepage'\\nimport { BrowserRouter, Routes, Route } from \\\"react-router-dom\\\";\\n\\n\\nfunction App() {\\n\\n  return (\\n      <BrowserRouter>\\n      <Routes>\\n        <Route path=\\\"/\\\" element={<Home/>}/>\\n        <Route index element={<Home />} />\\n        <Route path=\\\"/forgot-password\\\" element={<ForgotPasswordForm />} />\\n        <Route path=\\\"/reset-password\\\" element={<ResetPasswordForm />} />\\n        <Route path=\\\"/login\\\" element={<LoginForm />} />\\n        <Route path=\\\"/register\\\" element={<RegisterForm />} />\\n      </Routes>\\n    </BrowserRouter>\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\nimport { GoogleOAuthProvider } from '@react-oauth/google';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n     <GoogleOAuthProvider clientId=\\\"85792757464-4cer7qi0js1n067bhd9ca0ovcdcan1qg.apps.googleusercontent.com\\\">\\n      <App />\\n    </GoogleOAuthProvider>\\n  </React.StrictMode>\\n);\\n\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{48:function(e,a,t){e.exports=t(63)},56:function(e,a,t){},63:function(e,a,t){\"use strict\";t.r(a);var n=t(0),l=t.n(n),r=t(46),s=t.n(r),o=(t(56),t(57),t(68)),c=t(67),m=t(44),i=t(65),d=t(69),u=t(4);var E=()=>{const[e,a]=Object(n.useState)({email:\"\"}),[t,r]=Object(n.useState)({}),[s,E]=Object(n.useState)(!1),[p,g]=Object(n.useState)(\"\"),w=Object(u.o)(),y=e=>{const a={};return e.email&&/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.email)||(a.email=\"Invalid email address\"),a};return l.a.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center min-vh-100\"},l.a.createElement(o.a,{className:\"p-4\",style:{width:\"100%\",maxWidth:\"400px\"}},l.a.createElement(\"h2\",{className:\"text-center mb-4\"},\"Forgot Password\"),l.a.createElement(c.a,{onSubmit:a=>{a.preventDefault();const t=y(e);r(t),0===Object.keys(t).length&&(console.log(\"Form submitted successfully:\",e),E(!0),g(\"Password reset email sent!\"),w(\"/reset-password\"))}},l.a.createElement(c.a.Group,{controlId:\"email\"},l.a.createElement(c.a.Label,null,\"Email\"),l.a.createElement(c.a.Control,{type:\"email\",name:\"email\",value:e.email,onChange:t=>{const{name:n,value:l}=t.target;a({...e,[n]:l});const s=y({...e,[n]:l});r(s)},isInvalid:!!t.email}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.email)),l.a.createElement(m.a,{className:\"mt-4 w-100\",variant:\"primary\",type:\"submit\"},\"Forgot Password\"))),l.a.createElement(i.a,{position:\"top-end\",className:\"p-3\"},l.a.createElement(d.a,{onClose:()=>E(!1),show:s,delay:3e3,autohide:!0},l.a.createElement(d.a.Header,null,l.a.createElement(\"strong\",{className:\"me-auto\"},\"Success\")),l.a.createElement(d.a.Body,null,p))))},p=t(66),g=t(47),w=t(37),y=t(19);var b=()=>{const[e,a]=Object(n.useState)({firstName:\"\",lastName:\"\",email:\"\",password:\"\",confirmPassword:\"\",sex:\"\",country:\"\"}),[t,r]=Object(n.useState)({}),[s,u]=Object(n.useState)(!1),[E,b]=Object(n.useState)(\"\"),v=t=>{const{name:n,value:l}=t.target;if(\"firstName\"===n||\"lastName\"===n||\"country\"===n){const t=l.replace(/[^a-zA-Z\\s]+/g,\"\");a({...e,[n]:t})}else a({...e,[n]:l});const s=f({...e,[n]:l});r(s)},f=e=>{const a={};return e.firstName.trim()||(a.firstName=\"First name is required\"),e.lastName.trim()||(a.lastName=\"Last name is required\"),e.email&&/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.email)||(a.email=\"Invalid email address\"),(!e.password||e.password.length<8)&&(a.password=\"Password must be at least 8 characters long\"),e.password!==e.confirmPassword&&(a.confirmPassword=\"Passwords do not match\"),e.sex||(a.sex=\"Please select your sex\"),e.country.trim()||(a.country=\"Please select your country\"),a};return l.a.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center min-vh-100\"},l.a.createElement(o.a,{className:\"p-4\",style:{width:\"100%\",maxWidth:\"600px\"}},l.a.createElement(\"h2\",{className:\"text-center mb-4\"},\"Join us!\"),l.a.createElement(c.a,{onSubmit:a=>{a.preventDefault();const t=f(e);r(t),0===Object.keys(t).length&&(console.log(\"Form submitted successfully:\",e),u(!0),b(\"Registration successful!\"))}},l.a.createElement(p.a,null,l.a.createElement(g.a,{sm:6},l.a.createElement(c.a.Group,{controlId:\"firstName\"},l.a.createElement(c.a.Label,null,\"First Name\"),l.a.createElement(c.a.Control,{type:\"text\",name:\"firstName\",value:e.firstName,onChange:v,isInvalid:!!t.firstName}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.firstName))),l.a.createElement(g.a,{sm:6},l.a.createElement(c.a.Group,{controlId:\"lastName\"},l.a.createElement(c.a.Label,null,\"Last Name\"),l.a.createElement(c.a.Control,{type:\"text\",name:\"lastName\",value:e.lastName,onChange:v,isInvalid:!!t.lastName}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.lastName)))),l.a.createElement(c.a.Group,{controlId:\"email\",className:\"mt-3\"},l.a.createElement(c.a.Label,null,\"Email\"),l.a.createElement(c.a.Control,{type:\"email\",name:\"email\",value:e.email,onChange:v,isInvalid:!!t.email}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.email)),l.a.createElement(p.a,{className:\"mt-3\"},l.a.createElement(g.a,{sm:6},l.a.createElement(c.a.Group,{controlId:\"password\"},l.a.createElement(c.a.Label,null,\"Password\"),l.a.createElement(c.a.Control,{type:\"password\",name:\"password\",value:e.password,onChange:v,isInvalid:!!t.password}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.password))),l.a.createElement(g.a,{sm:6},l.a.createElement(c.a.Group,{controlId:\"confirmPassword\"},l.a.createElement(c.a.Label,null,\"Confirm Password\"),l.a.createElement(c.a.Control,{type:\"password\",name:\"confirmPassword\",value:e.confirmPassword,onChange:v,isInvalid:!!t.confirmPassword}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.confirmPassword)))),l.a.createElement(p.a,{className:\"mt-3\"},l.a.createElement(g.a,{sm:6},l.a.createElement(c.a.Group,{controlId:\"sex\"},l.a.createElement(c.a.Label,null,\"Sex\"),l.a.createElement(c.a.Select,{name:\"sex\",value:e.sex,onChange:v,isInvalid:!!t.sex},l.a.createElement(\"option\",{value:\"\"},\"Select\"),l.a.createElement(\"option\",{value:\"male\"},\"Male\"),l.a.createElement(\"option\",{value:\"female\"},\"Female\"),l.a.createElement(\"option\",{value:\"other\"},\"Other\")),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.sex))),l.a.createElement(g.a,{sm:6},l.a.createElement(c.a.Group,{controlId:\"country\"},l.a.createElement(c.a.Label,null,\"Country\"),l.a.createElement(c.a.Control,{type:\"text\",name:\"country\",value:e.country,onChange:v,isInvalid:!!t.country}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.country)))),l.a.createElement(m.a,{className:\"mt-4 w-100\",variant:\"primary\",type:\"submit\"},\"Register\"),l.a.createElement(\"p\",{className:\"text-center mt-3\"},\"Already have an account? \",l.a.createElement(\"a\",{href:\"/login\",className:\"text-primary\"},\"Login\")),l.a.createElement(\"hr\",null),l.a.createElement(y.a,{onSuccess:e=>{const{credential:a}=e;console.log(\"Google token:\",a),fetch(\"/api/auth/google\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({token:a})}).then(e=>e.json()).then(e=>{console.log(\"Server response:\",e),u(!0),b(\"Google sign-in successful!\")}).catch(e=>{console.error(\"Error:\",e),u(!0),b(\"Google sign-in failed!\")})},onError:e=>{console.error(\"Google login error:\",e),u(!0),b(\"Google sign-in failed!\")},render:e=>{let{onClick:a}=e;return l.a.createElement(m.a,{className:\"w-100 mt-2 btn-light border\",style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},onClick:a},l.a.createElement(w.a,{className:\"me-2\"}),\" Sign up with Google\")}}))),l.a.createElement(i.a,{position:\"top-end\",className:\"p-3\"},l.a.createElement(d.a,{onClose:()=>u(!1),show:s,delay:3e3,autohide:!0},l.a.createElement(d.a.Header,null,l.a.createElement(\"strong\",{className:\"me-auto\"},\"Success\")),l.a.createElement(d.a.Body,null,E))))};var v=()=>{const[e,a]=Object(n.useState)({newPassword:\"\",confirmPassword:\"\"}),[t,r]=Object(n.useState)({}),[s,E]=Object(n.useState)(!1),[p,g]=Object(n.useState)(\"\"),w=Object(u.o)(),y=t=>{const{name:n,value:l}=t.target;a({...e,[n]:l});const s=b({...e,[n]:l});r(s)},b=e=>{const a={};return e.newPassword?e.newPassword.length<8&&(a.newPassword=\"Password must be at least 8 characters\"):a.newPassword=\"New password is required\",e.confirmPassword!==e.newPassword&&(a.confirmPassword=\"Passwords do not match\"),a};return l.a.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center min-vh-100\"},l.a.createElement(o.a,{className:\"p-4\",style:{width:\"100%\",maxWidth:\"400px\"}},l.a.createElement(\"h2\",{className:\"text-center mb-4\"},\"Reset Password\"),l.a.createElement(c.a,{onSubmit:a=>{a.preventDefault();const t=b(e);r(t),0===Object.keys(t).length&&(console.log(\"Form submitted successfully:\",e),E(!0),g(\"Password reset successfully!\"),w(\"/login\"))}},l.a.createElement(c.a.Group,{controlId:\"newPassword\"},l.a.createElement(c.a.Label,null,\"New Password\"),l.a.createElement(c.a.Control,{type:\"password\",name:\"newPassword\",value:e.newPassword,onChange:y,isInvalid:!!t.newPassword}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.newPassword)),l.a.createElement(c.a.Group,{controlId:\"confirmPassword\",className:\"mt-3\"},l.a.createElement(c.a.Label,null,\"Confirm Password\"),l.a.createElement(c.a.Control,{type:\"password\",name:\"confirmPassword\",value:e.confirmPassword,onChange:y,isInvalid:!!t.confirmPassword}),l.a.createElement(c.a.Control.Feedback,{type:\"invalid\"},t.confirmPassword)),l.a.createElement(m.a,{className:\"mt-4 w-100\",variant:\"primary\",type:\"submit\"},\"Reset Password\"))),l.a.createElement(i.a,{position:\"top-end\",className:\"p-3\"},l.a.createElement(d.a,{onClose:()=>E(!1),show:s,delay:3e3,autohide:!0},l.a.createElement(d.a.Header,null,l.a.createElement(\"strong\",{className:\"me-auto\"},\"Success\")),l.a.createElement(d.a.Body,null,p))))};var f=()=>{const[e,a]=Object(n.useState)(null),[t,r]=Object(n.useState)(!1),[s,c]=Object(n.useState)(!1),[u,E]=Object(n.useState)(\"\");Object(n.useEffect)(()=>{const e=localStorage.getItem(\"user\");null!==e&&(a(JSON.parse(e)),r(!0))},[]);return l.a.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center min-vh-100\"},l.a.createElement(o.a,{className:\"p-4\",style:{width:\"100%\",maxWidth:\"600px\"}},t&&e?l.a.createElement(\"div\",null,l.a.createElement(\"h2\",{className:\"text-center mb-4\"},\"Welcome, \",e.name,\"!\"),l.a.createElement(m.a,{className:\"w-100\",variant:\"primary\",onClick:()=>{a(null),r(!1),localStorage.removeItem(\"user\")}},\"Logout\")):l.a.createElement(\"div\",null,l.a.createElement(\"h2\",{className:\"text-center mb-4\"},\"Login\"),l.a.createElement(y.b,{clientId:\"85792757464-4cer7qi0js1n067bhd9ca0ovcdcan1qg.apps.googleusercontent.com\"},l.a.createElement(y.a,{onSuccess:e=>{if(e&&e.credential){const t=jwtDecode(e.credential);a(t),r(!0),localStorage.setItem(\"user\",JSON.stringify(t))}else console.error(\"Invalid credential response\"),c(!0),E(\"Login failed!\")},onError:()=>{console.log(\"Login Failed\"),c(!0),E(\"Google sign-in failed!\")},render:e=>{let{onClick:a}=e;return l.a.createElement(m.a,{className:\"w-100 mt-2 btn-light border\",style:{display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},onClick:a},l.a.createElement(w.a,{className:\"me-2\"}),\" Sign in with Google\")}})))),l.a.createElement(i.a,{position:\"top-end\",className:\"p-3\"},l.a.createElement(d.a,{onClose:()=>c(!1),show:s,delay:3e3,autohide:!0},l.a.createElement(d.a.Header,null,l.a.createElement(\"strong\",{className:\"me-auto\"},\"Notification\")),l.a.createElement(d.a.Body,null,u))))},h=t(35),N=t(40),C=t(29),S=t(18);var P=function(){return l.a.createElement(C.a,{expand:\"lg\",className:\"bg-body-tertiary\"},l.a.createElement(h.a,{fluid:!0},l.a.createElement(C.a.Brand,{href:\"#\"},\"ShaRecipe\"),l.a.createElement(C.a.Toggle,{\"aria-controls\":\"navbarScroll\"}),l.a.createElement(C.a.Collapse,{id:\"navbarScroll\"},l.a.createElement(N.a,{className:\"mx-auto my-2 my-lg-0\",navbarScroll:!0},l.a.createElement(N.a.Link,{href:\"#home\"},\"Home\"),l.a.createElement(N.a.Link,{href:\"#recipes\"},\"Recipes\")),l.a.createElement(\"div\",{className:\"d-flex\"},l.a.createElement(S.b,{to:\"/login\"},l.a.createElement(m.a,{variant:\"outline-dark\",style:{borderRadius:\"12px\",marginRight:\"8px\"}},\"Sign In\")),l.a.createElement(S.b,{to:\"/register\"},l.a.createElement(m.a,{variant:\"dark\",style:{borderRadius:\"12px\"}},\"Sign Up\"))))))};var x=function(){return l.a.createElement(\"footer\",{style:{backgroundColor:\"#f8f9fa\",color:\"#212529\",textAlign:\"center\",padding:\"1rem\",marginTop:\"auto\"}},l.a.createElement(h.a,null,l.a.createElement(\"p\",{className:\"mb-0\"},\"\\xa9 \",(new Date).getFullYear(),\" ShaRecipe. All rights reserved.\")))};var j=function(){return l.a.createElement(\"div\",null,l.a.createElement(P,null),l.a.createElement(\"p\",null,\"Hello visitor\"),l.a.createElement(x,null))};var I=function(){return l.a.createElement(S.a,null,l.a.createElement(u.c,null,l.a.createElement(u.a,{path:\"/\",element:l.a.createElement(j,null)}),l.a.createElement(u.a,{index:!0,element:l.a.createElement(j,null)}),l.a.createElement(u.a,{path:\"/forgot-password\",element:l.a.createElement(E,null)}),l.a.createElement(u.a,{path:\"/reset-password\",element:l.a.createElement(v,null)}),l.a.createElement(u.a,{path:\"/login\",element:l.a.createElement(f,null)}),l.a.createElement(u.a,{path:\"/register\",element:l.a.createElement(b,null)})))};s.a.createRoot(document.getElementById(\"root\")).render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(y.b,{clientId:\"85792757464-4cer7qi0js1n067bhd9ca0ovcdcan1qg.apps.googleusercontent.com\"},l.a.createElement(I,null))))}},[[48,1,2]]]);","extractedComments":[]}