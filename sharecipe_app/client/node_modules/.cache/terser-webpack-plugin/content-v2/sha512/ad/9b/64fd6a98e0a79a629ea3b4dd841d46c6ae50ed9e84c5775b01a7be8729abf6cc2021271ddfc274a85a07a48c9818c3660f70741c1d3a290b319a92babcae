{"map":"{\"version\":3,\"sources\":[\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/frontend/src/components/Register.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/frontend/src/Routes.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/frontend/src/App.js\",\"/home/berrybug/Desktop/ShaRecipe/sharecipe_app/frontend/src/index.js\"],\"names\":[\"RegisterForm\",\"Routes\",\"App\",\"React\",\"createElement\",\"className\",\"Router\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"0PAiPeA,8BC7NAC,IAAAA,EAAAA,EAAM,ECKNC,IAAAA,EAdf,WAEE,OAEEC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,UAAU,OACbF,EAAAA,EAAAC,cAACE,EAAAA,EAAM,KACPH,EAAAA,EAAAC,cAACH,EAAM,SCZAM,EAAAA,EAASC,WAAWC,SAASC,eAAe,SACpDC,OACHR,EAAAA,EAAAC,cAACD,EAAAA,EAAMS,WAAU,KACfT,EAAAA,EAAAC,cAACF,EAAG\",\"sourcesContent\":[\"import React, { useState } from \\\"react\\\";\\nimport { Form, Button, Col, Row, Toast, ToastContainer, Card } from \\\"react-bootstrap\\\";\\nimport { FaGoogle } from 'react-icons/fa';\\n\\nconst RegisterForm = () => {\\n  const [formData, setFormData] = useState({\\n    firstName: '',\\n    lastName: '',\\n    email: '',\\n    password: '',\\n    confirmPassword: '',\\n    sex: '',\\n    country: '',\\n  });\\n\\n  const [errors, setErrors] = useState({});\\n  const [showToast, setShowToast] = useState(false);\\n  const [toastMessage, setToastMessage] = useState('');\\n\\n  const handleChange = (e) => {\\n    const { name, value } = e.target;\\n\\n    // Prevent non-alphabetic characters for first name, last name, and country\\n    if (\\n      name === 'firstName' ||\\n      name === 'lastName' ||\\n      name === 'country'\\n    ) {\\n      const alphabeticValue = value.replace(/[^a-zA-Z\\\\s]+/g, '');\\n      setFormData({ ...formData, [name]: alphabeticValue });\\n    } else {\\n      setFormData({ ...formData, [name]: value });\\n    }\\n\\n    // Update errors in real-time\\n    const newErrors = validate({ ...formData, [name]: value });\\n    setErrors(newErrors);\\n  };\\n\\n  const validate = (formData) => {\\n    const newErrors = {};\\n  \\n    // Check for required fields and validate format\\n    if (!formData.firstName.trim()) {\\n      newErrors.firstName = 'First name is required';\\n    }\\n    if (!formData.lastName.trim()) {\\n      newErrors.lastName = 'Last name is required';\\n    }\\n    \\n    const emailRegex = /^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$/;\\n    if (!formData.email || !emailRegex.test(formData.email)) {\\n      newErrors.email = 'Invalid email address';\\n    }\\n  \\n    // Password and confirm password validation\\n    if (!formData.password || formData.password.length < 8) {\\n      newErrors.password = 'Password must be at least 8 characters long';\\n    }\\n    if (formData.password !== formData.confirmPassword) {\\n      newErrors.confirmPassword = 'Passwords do not match';\\n    }\\n  \\n    if (!formData.sex) {\\n      newErrors.sex = 'Please select your sex';\\n    }\\n  \\n    if (!formData.country.trim()) {\\n      newErrors.country = 'Please select your country';\\n    }\\n  \\n    return newErrors;\\n  };\\n\\n  const handleSubmit = (e) => {\\n    e.preventDefault();\\n    const newErrors = validate(formData);\\n    setErrors(newErrors);\\n  \\n    if (Object.keys(newErrors).length === 0) {\\n      // Handle form submission (e.g., send data to server)\\n      console.log('Form submitted successfully:', formData);\\n      setShowToast(true);\\n      setToastMessage('Registration successful!');\\n    }\\n  };\\n  \\n  return (\\n    <div className=\\\"d-flex justify-content-center align-items-center min-vh-100\\\">\\n      <Card className=\\\"p-4\\\" style={{ width: '100%', maxWidth: '600px' }}>\\n        <h2 className=\\\"text-center mb-4\\\">Join us!</h2>\\n        <Form onSubmit={handleSubmit}>\\n          <Row>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"firstName\\\">\\n                <Form.Label>First Name</Form.Label>\\n                <Form.Control\\n                  type=\\\"text\\\"\\n                  name=\\\"firstName\\\"\\n                  value={formData.firstName}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.firstName}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.firstName}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"lastName\\\">\\n                <Form.Label>Last Name</Form.Label>\\n                <Form.Control\\n                  type=\\\"text\\\"\\n                  name=\\\"lastName\\\"\\n                  value={formData.lastName}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.lastName}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.lastName}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n          </Row>\\n\\n          <Form.Group controlId=\\\"email\\\" className=\\\"mt-3\\\">\\n            <Form.Label>Email</Form.Label>\\n            <Form.Control\\n              type=\\\"email\\\"\\n              name=\\\"email\\\"\\n              value={formData.email}\\n              onChange={handleChange}\\n              isInvalid={!!errors.email}\\n            />\\n            <Form.Control.Feedback type=\\\"invalid\\\">\\n              {errors.email}\\n            </Form.Control.Feedback>\\n          </Form.Group>\\n\\n          <Row className=\\\"mt-3\\\">\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"password\\\">\\n                <Form.Label>Password</Form.Label>\\n                <Form.Control\\n                  type=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  value={formData.password}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.password}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.password}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"confirmPassword\\\">\\n                <Form.Label>Confirm Password</Form.Label>\\n                <Form.Control\\n                  type=\\\"password\\\"\\n                  name=\\\"confirmPassword\\\"\\n                  value={formData.confirmPassword}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.confirmPassword}\\n                />\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.confirmPassword}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n          </Row>\\n\\n          <Row className=\\\"mt-3\\\">\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"sex\\\">\\n                <Form.Label>Sex</Form.Label>\\n                <Form.Select\\n                  name=\\\"sex\\\"\\n                  value={formData.sex}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.sex}\\n                >\\n                  <option value=\\\"\\\">Select</option>\\n                  <option value=\\\"male\\\">Male</option>\\n                  <option value=\\\"female\\\">Female</option>\\n                  <option value=\\\"other\\\">Other</option>\\n                </Form.Select>\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.sex}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n            <Col sm={6}>\\n              <Form.Group controlId=\\\"country\\\">\\n                <Form.Label>Country</Form.Label>\\n                <Form.Control\\n                  type=\\\"text\\\"\\n                  name=\\\"country\\\"\\n                  value={formData.country}\\n                  onChange={handleChange}\\n                  isInvalid={!!errors.country}/>\\n                <Form.Control.Feedback type=\\\"invalid\\\">\\n                  {errors.country}\\n                </Form.Control.Feedback>\\n              </Form.Group>\\n            </Col>\\n          </Row>\\n\\n          <Button className=\\\"mt-4 w-100\\\" variant=\\\"primary\\\" type=\\\"submit\\\">\\n            Register\\n          </Button>\\n\\n          {/* Login link */}\\n          <p className=\\\"text-center mt-3\\\">\\n            Already have an account? <a href=\\\"/login\\\" className=\\\"text-primary\\\">Login</a>\\n          </p>\\n\\n          {/* Divider with Google sign-up */}\\n          <hr />\\n          <Button className=\\\"w-100 mt-2 btn-light border\\\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\\n            <FaGoogle className=\\\"me-2\\\" /> Sign up with Google\\n          </Button>\\n        </Form>\\n      </Card>\\n\\n      <ToastContainer position=\\\"top-end\\\" className=\\\"p-3\\\">\\n        <Toast\\n          onClose={() => setShowToast(false)}\\n          show={showToast}\\n          delay={3000}\\n          autohide>\\n          <Toast.Header>\\n            <strong className=\\\"me-auto\\\">Success</strong>\\n          </Toast.Header>\\n          <Toast.Body>{toastMessage}</Toast.Body>\\n        </Toast>\\n      </ToastContainer>\\n    </div>\\n  );\\n};\\n\\nexport default RegisterForm;\\n\",\"import React from 'react';\\nimport { Router, Routes, Route } from 'react-router-dom';\\nimport ForgotPasswordForm from './components/ForgotPassword';\\nimport HomePage from './pages/Homepage';\\nimport ResetPasswordForm from './components/ResetPassword';\\n\\n\\nconst AppRoutes = () => {\\n  return (\\n    <Router>\\n      <Routes>\\n        {/* Public Routes */}\\n        <Route path=\\\"/\\\" element={<HomePage />} />\\n        <Route path=\\\"/forgot-password\\\" element={<ForgotPasswordForm />} />\\n        <Route path=\\\"/reset-password\\\" element={<ResetPasswordForm />} />\\n      </Routes>\\n    </Router>\\n  );\\n};\\n\\nexport default Routes;\\n\",\"import './App.css';\\nimport React from 'react';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\nimport RegisterForm from './components/Register';\\nimport ForgotPasswordForm from './components/ForgotPassword';\\nimport ResetPasswordForm from './components/ResetPassword';\\nimport Home from './pages/Homepage'\\nimport { Router } from 'react-router-dom';\\nimport Routes from './Routes'\\n\\n\\nfunction App() {\\n\\n  return (\\n    \\n    <div className=\\\"App\\\">\\n      <Router>\\n      <Routes />\\n    </Router>\\n    </div>\\n    \\n\\n  );\\n}\\n\\nexport default App;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\n\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{45:function(e,n,t){e.exports=t(60)},53:function(e,n,t){},60:function(e,n,t){\"use strict\";t.r(n);var a=t(0),r=t.n(a),c=t(41),l=t.n(c);t(53),t(54),t(65),t(64),t(62),t(42),t(37),t(63),t(66),t(44);var o=t(67);t(43),t(34),t(25);var u=o.d;var i=function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(o.c,null,r.a.createElement(u,null)))};l.a.createRoot(document.getElementById(\"root\")).render(r.a.createElement(r.a.StrictMode,null,r.a.createElement(i,null)))}},[[45,1,2]]]);","extractedComments":[]}